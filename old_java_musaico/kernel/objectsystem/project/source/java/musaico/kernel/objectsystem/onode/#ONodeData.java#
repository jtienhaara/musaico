package musaico.kernel.objectsystem.onode;

import java.io.Serializable;


import musaico.field.Field;

import musaico.kernel.objectsystem.Attribute;
import musaico.kernel.objectsystem.Record;
import musaico.kernel.objectsystem.RecordFlag;
import musaico.kernel.objectsystem.RecordOperationException;

import musaico.region.Position;

import musaico.security.Credentials;
import musaico.security.Security;


/**
 * <p>
 * Some region of data memory for an ONode, such as the main
 * data, or the metadata (creation and modified times, security,
 * size in terms of Fields, and so on), or other object system-
 * specific data (such as a journal and so on).
 * </p>
 *
 * <p>
 * Every ONodeData must implement the Record interface, to provide
 * open, close, read and write access to the data for the ONode.
 * </p>
 *
 *
 * <p>
 * Because object systems can conceivably be distributed and using
 * RMI, every Record must be Serializable in order to play nicely
 * over RMI.
 * </p>
 *
 *
 * <br> </br>
 * <br> </br>
 *
 * <hr> </hr>
 *
 * <br> </br>
 * <br> </br>
 *
 *
 * <pre>
 * Copyright (c) 2012 Johann Tienhaara
 * All rights reserved.
 *
 * This file is part of Musaico.
 *
 * Musaico is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Musaico is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Musaico.  If not, see &lt;http://www.gnu.org/licenses/&gt;.
 * </pre>
 */
public interface ONodeData
    extends Record, Serializable
{
    /** No ONodeData.  Causes callers a great deal of grief if they
     *  are expecting to be able to read or write ONode data. */
    public static final ONodeData NONE = new NoONodeData ();


}
